{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","selectorResult","nodeType","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","percentFormat","number","parseInt","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","addClass","append","list","onClick","_emptyFn","$list","forEach","value","$li","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","BackColor","ForeColor$1","Quote","Code","Emoticon","Table","Video","Image","Menus","menus","Text","Command","API","_currentRange","UploadImg","Bar","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","prototype","constructor","elem","get","index","first","last","addEventListener","off","removeEventListener","attr","val","getAttribute","setAttribute","className","arr","split","filter","push","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","$children","child","appendChild","remove","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parent","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","config","debug","showLinkImg","uploadImgMaxSize","uploadImgShowBase64","uploadImgServer","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","UA","_ua","navigator","userAgent","isWebkit","test","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","reg","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$textContainerElem","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","title","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","getSelectionContainerElem","createRangeByElem","_createPanel","getSelectionText","link","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$selectionELem","$parentElem","faceHtml","handHtml","target","_insert","emoji","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","name","toLowerCase","$table","textValId","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","$file","fileElem","click","fileList","$linkUrl","url","insertLinkImg","tabsConfigResult","window","FileReader","MenuConstructors","bold","head","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","getHTML","getText","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","saveRange","$textElem","pHandle","$selectionElem","$p","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_startOffset","startOffset","preventDefault","keyCode","_name","_execCommand","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","execCommand","_range","getSelection","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","createRange","selectNode","_typeof","Symbol","iterator","_alert","alertInfo","debugInfo","alert","img","onload","onerror","onabort","src","_this3","maxSize","maxSizeM","hooks","resultFiles","errInfo","file","size","formdata","FormData","XMLHttpRequest","ontimeout","upload","onprogress","percent","lengthComputable","loaded","total","bar","onreadystatechange","readyState","status","responseText","JSON","parse","ex","errno","data","open","send","reader","readAsDataURL","$textContainer","$bar","showOnce","info","_initDom","$toolbarSelector","_initConfig","Object","assign","_initCommand","_initSelectionAPI","_initMenus","_initText","_initUploadImg","_addBar","create","varArgs","TypeError","to","arguments","nextSource","nextKey","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (selector.nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector)) {\n        // DOM List\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, fn) {\n        return this.forEach(function (elem) {\n            elem.addEventListener(type, fn, false);\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn, false);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (!value) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: true,\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1000 * 1000,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: true,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    uploadImgServer: '/upload-img',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        /* token: 'abcdef12345' */\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        /* 'Accept' : 'text/x-json' */\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: true,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 3000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        before: function before(xhr, editor, files) {},\n        success: function success(xhr, editor, result) {},\n        fail: function fail(xhr, editor, result) {},\n        error: function error(xhr, editor) {},\n        timeout: function timeout(xhr, editor) {}\n    }\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n// 返回百分比的格式\nfunction percentFormat(number) {\n    number = parseInt(number * 100);\n    return number + '%';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    if ($title) {\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $elem.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'scroll');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $textContainerElem.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        if (!text || !link) {\n            return;\n        }\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - backcolor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-pencil2\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-pencil2\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-pencil2\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-pencil2\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-pencil2\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-pencil2\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-pencil2\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-pencil2\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - forecolor\n*/\n// 构造函数\nfunction ForeColor$1(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor$1.prototype = {\n    constructor: ForeColor$1,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 拼接表情字符串\n        var faceHtml = '';\n        var faceStr = '😀 😃 😄 😁 😆 😅 😂  😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😜 😝 😛 🤑 🤗 🤓 😎 😏 😒 😞 😔 😟 😕 🙁  😣 😖 😫 😩 😤 😠 😡 😶 😐 😑 😯 😦 😧 😮 😲 😵 😳 😱 😨 😰 😢 😥 😭 😓 😪 😴 🙄 🤔 😬 🤐';\n        faceStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var handHtml = '';\n        var handStr = '🙌 👏 👋 👍 👎 👊 ✊ ️👌 ✋ 👐 💪 🙏 ️👆 👇 👈 👉 🖕 🖐 🤘 🖖';\n        handStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                handHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '表情',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }, // first tab end\n            {\n                // 标题\n                title: '手势',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + handHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // second tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emoji) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<span>' + emoji + '</span>');\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th></th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td></td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td></td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val);\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-image\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {}\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = BackColor;\n\nMenuConstructors.backColor = ForeColor$1;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                menu.tryChangeActive();\n            }\n        });\n    }\n};\n\n/*\n    编辑区域\n*/\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 获取 html\n    getHTML: function getHTML() {\n        // 检查所有顶级标签，看是否需要用 p 再包裹一遍（针对 div textNode）\n    },\n\n    // 获取 text\n    getText: function getText() {},\n\n    // 获取 json\n    getJSON: function getJSON() {\n        // 先获取 html 再处理成 JSON\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 如果在 <code> 中，要做特殊处理\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        // 保证传入的参数是 html 代码\n        var test = /^<.+>$/.test(html);\n        if (!test && !UA.isWebkit()) {\n            // webkit 可以插入非 html 格式的文字\n            throw new Error('执行 insertHTML 命令时传入的参数必须是 html 格式');\n        }\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选取\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选取\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选取\n        var selection = window.getSelection();\n        var range = selection.getRangeAt(0);\n\n        // 判断选取内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选取\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = range.commonAncestorContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = range.startContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = range.endContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n    },\n\n    // 选取是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选取必须没有内容才可以\n            return;\n        }\n\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n            // 插入 &#8203\n            editor.cmd.do('insertHTML', '&#8203;');\n            // 修改 offset 位置\n            range.setEnd(range.endContainer, range.endOffset + 1);\n            // 存储\n            this.saveRange(range);\n        } else {\n            $elem = $('<strong>&#8203;</strong>');\n            editor.cmd.do('insertElem', $elem);\n            this.createRangeByElem($elem, true);\n        }\n    },\n\n    // 根据 $Elem 设置选取\n    createRangeByElem: function createRangeByElem($elem, toStart) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        range.selectNode(elem);\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            alert(alertInfo);\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n\n        var img = document.createElement('img');\n        img.onload = function () {\n            img = null;\n            editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F ' + link + ' \\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1000 / 1000;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n            if (/\\.(jpg|jpeg|png|bmp|gif)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            formdata.append(file.name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            var xhr = new XMLHttpRequest();\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        editor.bar.show('上传进度: ' + percentFormat(percent));\n                        if (percent === 1) {\n                            setTimeout(function () {\n                                editor.bar.hide();\n                            }, 1000);\n                        }\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4 && xhr.status === 200) {\n                    if (xhr.status !== 200) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        var data = result.data || [];\n                        data.forEach(function (link) {\n                            _this3.insertLinkImg(link);\n                        });\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                hooks.before(xhr, editor, resultFiles);\n            }\n\n            // 发送请求\n            xhr.open('POST', uploadImgServer);\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // 显示 base64 格式\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑区域左下角的提示条\n*/\n\n// 构造函数\nfunction Bar(editor) {\n    this.editor = editor;\n}\n\n// 原型\nBar.prototype = {\n    constructor: Bar,\n\n    // 初始化\n    init: function init() {\n        var editor = this.editor;\n        var $textContainer = editor.$textContainerElem;\n        var $bar = $('<div class=\"w-e-bar\"></div>');\n        $textContainer.append($bar);\n\n        // 记录属性\n        this.$bar = $bar;\n    },\n\n    // 显示一次\n    showOnce: function showOnce(info) {\n        var _this = this;\n\n        this.show(info);\n\n        setTimeout(function () {\n            _this.hide();\n        }, 1500);\n    },\n\n    // 显示文字\n    show: function show(info) {\n        var $bar = this.$bar;\n        $bar.text(info);\n        $bar.show();\n    },\n\n    // 隐藏\n    hide: function hide() {\n        var $bar = this.$bar;\n        $bar.hide();\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textElem.addClass('w-e-text');\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n    },\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.text = new Text(this);\n        this.text.init();\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 添加 bar\n    _addBar: function _addBar() {\n        this.bar = new Bar(this);\n        this.bar.init();\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化 DOM\n        this._initDom();\n\n        // 初始化配置信息\n        this._initConfig();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 text\n        this._initText();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 添加 bar\n        this._addBar();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 将 css 代码添加到 <style> 中\ndocument.addEventListener('DOMContentLoaded', function (e) {\n    // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n    var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'icomoon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'icomoon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  z-index: 10001;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  padding: 10px 5px;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;  z-index: 10000;}.w-e-text-container .w-e-bar {  position: absolute;  background-color: #f1f1f1;  padding: 2px 5px;  color: #666;  bottom: 0;  left: 0;  font-size: 12px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin-left: 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}';\n\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = inlinecss;\n    document.getElementsByTagName('HEAD').item(0).appendChild(style);\n});\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}