{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","nodeType","selectorResult","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","titleHtml","replaceLang","addClass","append","list","onClick","_emptyFn","$list","forEach","elemHtml","value","$li","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","Menus","menus","getPasteText","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","filterStyle","pasteHtml","docSplitHtml","split","getPasteImgs","items","test","push","getAsFile","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","prototype","constructor","elem","get","index","first","last","types","addEventListener","target","matches","off","removeEventListener","attr","val","getAttribute","setAttribute","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","config","zIndex","debug","linkCheck","link","pasteFilterStyle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","str","langArgs","reg","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","title","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","content","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","faceHtml","handHtml","_insert","emoji","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","name","toLowerCase","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","bold","head","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","pHandle","$p","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","ex","pasteFiles","img","dataTransfer","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","execCommand","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","Date","now","timeoutId","_hide","_typeof","Symbol","iterator","_alert","alertInfo","debugInfo","customAlert","onload","callback","onerror","onabort","src","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","encodeURIComponent","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","blur","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchange","currentHtml","beforeBlurHtml","create","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\r\n    poly-fill\r\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\r\n    DOM 操作 API\r\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector)) {\n        // DOM List\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn, false);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                }, false);\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn, false);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n\n    // new 一个对象\n};function $(selector) {\n    return new DomElement(selector);\n}\n\n/*\r\n    配置信息\r\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n    // 上传图片自定义提示方法\n    // customAlert: function (info) {\n    //     // 自定义上传提示\n    // },\n\n    // // 自定义上传图片\n    // customUploadImg: function (files, insert) {\n    //     // files 是 input 中选中的文件列表\n    //     // insert 是获取图片 url 后，插入到编辑器的方法\n    //     insert(imgUrl)\n    // }\n};\n\n/*\r\n    工具\r\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;');\n}\n\n// 返回百分比的格式\n\n/*\r\n    bold-menu\r\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    替换多语言\r\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\r\n    droplist\r\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $elem.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\r\n    menu - header\r\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    panel\r\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\r\n    menu - link\r\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // tab end\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        if (!text || !link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    italic-menu\r\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    redo-menu\r\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\r\n    strikeThrough-menu\r\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    underline-menu\r\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    undo-menu\r\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\r\n    menu - list\r\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - justify\r\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\r\n    menu - Forecolor\r\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-pencil2\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-pencil2\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-pencil2\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-pencil2\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-pencil2\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-pencil2\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-pencil2\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-pencil2\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-pencil2\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\r\n    menu - BackColor\r\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"><i/></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: [{ $elem: $('<i style=\"color:#000000;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#000000' }, { $elem: $('<i style=\"color:#eeece0;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#eeece0' }, { $elem: $('<i style=\"color:#1c487f;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#1c487f' }, { $elem: $('<i style=\"color:#4d80bf;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#4d80bf' }, { $elem: $('<i style=\"color:#c24f4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#c24f4a' }, { $elem: $('<i style=\"color:#8baa4a;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#8baa4a' }, { $elem: $('<i style=\"color:#7b5ba1;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#7b5ba1' }, { $elem: $('<i style=\"color:#46acc8;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#46acc8' }, { $elem: $('<i style=\"color:#f9963b;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#f9963b' }, { $elem: $('<i style=\"color:#ffffff;\" class=\"w-e-icon-paint-brush\"></i>'), value: '#ffffff' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\r\n    menu - quote\r\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"><i/>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        if (!UA.isIE()) {\n            editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var content = void 0,\n            $targetELem = void 0;\n        if ($selectionElem.getNodeName() === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if ($selectionElem.getNodeName() === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - code\r\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - emoticon\r\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"><i/>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 拼接表情字符串\n        var faceHtml = '';\n        var faceStr = '😀 😃 😄 😁 😆 😅 😂  😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😜 😝 😛 🤑 🤗 🤓 😎 😏 😒 😞 😔 😟 😕 🙁  😣 😖 😫 😩 😤 😠 😡 😶 😐 😑 😯 😦 😧 😮 😲 😵 😳 😱 😨 😰 😢 😥 😭 😓 😪 😴 🙄 🤔 😬 🤐';\n        faceStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var handHtml = '';\n        var handStr = '🙌 👏 👋 👍 👎 👊 ✊ ️👌 ✋ 👐 💪 🙏 ️👆 👇 👈 👉 🖕 🖐 🤘 🖖';\n        handStr.split(/\\s/).forEach(function (item) {\n            if (item) {\n                handHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '表情',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }, // first tab end\n            {\n                // 标题\n                title: '手势',\n                // 模板\n                tpl: '<div class=\"w-e-emoticon-container\">' + handHtml + '</div>',\n                // 事件绑定\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        _this._insert(target.innerHTML);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // second tab end\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emoji) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<span>' + emoji + '</span>');\n    }\n};\n\n/*\r\n    menu - table\r\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - video\r\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"><i/></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\r\n    menu - img\r\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"><i/></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }] // second tab end\n        }]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    所有菜单的汇总\r\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\r\n    菜单集合\r\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\r\n    粘贴信息的处理\r\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").+?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").+?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\r\n    编辑区域\r\n*/\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.html();\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if (val == null) {\n            return $textElem.text();\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var pasteFilterStyle = editor.config.pasteFilterStyle;\n        var $textElem = editor.$textElem;\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var selectedClass = 'w-e-selected';\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            // 去掉所有图片的 selected 样式\n            $textElem.find('img').removeClass(selectedClass);\n\n            // 为点击的图片增加样式，并记录当前图片\n            $img.addClass(selectedClass);\n            editor._selectedImg = $img;\n\n            // 修改选取\n            editor.selection.createRangeByElem($img);\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 取消掉 selected 样式，并删除记录\n            $textElem.find('img').removeClass(selectedClass);\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\r\n    命令，封装 document.execCommand\r\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\r\n    selection range API\r\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\r\n    上传进度条\r\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\r\n    上传图片\r\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n        if (!uploadImgServer && !uploadImgShowBase64) {\n            return;\n        }\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1000 / 1000;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                val = encodeURIComponent(val);\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgServer.indexOf('?') > 0) {\n                    uploadImgServer += '&';\n                } else {\n                    uploadImgServer += '?';\n                }\n                uploadImgServer = uploadImgServer + key + '=' + val;\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\r\n    编辑器构造函数\r\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 blur\n        $(document).on('click', function (e) {\n            //判断当前点击元素是否在编辑器内\n            var isChild = $toolbarSelector.isContain($(e.target));\n            if (!isChild) {\n                this.blur && this.blur();\n            }\n        });\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    return;\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, 200);\n            };\n        }\n\n        // -------- 绑定 blur 事件 --------\n        var beforeBlurHtml = this.txt.html();\n        var blur = this.config.blur;\n        if (blur && typeof blur === 'function') {\n            this.blur = function () {\n                var currentHtml = this.txt.html();\n                if (currentHtml === beforeBlurHtml) {\n                    return;\n                }\n                blur(currentHtml);\n                beforeBlurHtml = currentHtml;\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}.w-e-text img.w-e-selected {  border: 2px solid #1e88e5;}.w-e-text img.w-e-selected:hover {  box-shadow: none;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}